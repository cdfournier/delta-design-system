/*
FORM ELEMENTS
  resets
  fieldset
  input, label, placeholder
  disabled
  select
  checkbox
  radio button
  toggle switches
  buttons
  show-hide password
*/


// RESETS
input[type="password"],
input[type="checkbox"],
input[type="number"],
input[type="select"],
input[type="search"],
input[type="radio"],
input[type="email"],
input[type="date"],
input[type="file"],
input[type="text"],
input[type="tel"],
input[type="url"] {
  font-size: 1rem;
  @include appearance(none);
  @include transition(all, 0.25s, ease);
}


// FIELDSET
fieldset {
  position: relative;
  width: 100%;
  max-width: 36rem;
  margin: 1rem 0 0;
  padding: 1.5rem 0 0;
  border: none;
  .message {
    display: block;
    position: relative;
    width: 100%;
    min-height: 1.25rem;
    margin: 0.5rem 0 0;
    padding: 0;
    @include font-bold;
    font-size: 0.8rem;
    .error, .valid {
      position: absolute;
      top: 0;
      width: 100%;
      padding: 0;
      opacity: 0;
      @include transition(all, 0.25s, ease);
    }
    .error {color: $error;}
    .valid {color: $valid;}
    .error.show, .valid.show {opacity: 1;}
  }
}

fieldset.checkbox, fieldset.radio, fieldset.toggle, fieldset.button-input {padding: 0;}

fieldset.sm {width: 50%;}


// INPUT, LABEL, PLACEHOLDER
input {
  width: 100%;
  min-height: 3rem;
  margin: 0;
  padding: 0.5rem;
  border: 1px solid $dk-gray;
  border-radius: 0.25rem;
  cursor: text;
}

input:placeholder {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  cursor: text;
  transition: inherit;
}

label {
  display: flex;
  align-items: center;
  position: absolute;
  top: 0;
  left: 0;
  width: calc(100% - 1rem);
  height: auto;
  margin: 0;
  padding: 0;
  @include font-bold;
  font-size: 1rem;
  background-color: $white;
  @include transform(translate(0.5rem, 2.25rem));
  @include transition(all, 0.25s, ease);
}

input:focus + label,
input:not(:placeholder-shown) + label {
  width: 100%;
  font-size: 0.8rem;
  background-color: transparent;
  @include transform(translate(0,0));
}

.input-icon {
  display: flex;
  align-items: center;
  position: absolute;
  top: 1.5rem;
  right: 0.5rem;
  width: 1.5rem;
  height: 3rem;
  cursor: pointer;
  svg {
    position: absolute;
    right: 0;
    fill: $primary;
  }
}


// DISABLED
input:disabled + label {color: $md-gray;}


// SELECT
select {
  display: inline-block;
  position: relative;
  z-index: 1;
  width: 100%;
  min-height: 3rem;
  margin: 0;
  padding: 0.5rem;
  border: 1px solid $dk-gray;
  border-radius: 0.25rem;
  background-color: transparent;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  cursor: pointer;
  @include appearance(none);
  @include transition(all, 0.25s, ease);
}

select option {
  overflow: hidden;
  text-overflow: ellipsis;
  @include appearance(none);
}

.select-icon {
  display: flex;
  align-items: center;
  position: absolute;
  top: 1.5rem;
  right: 0.5rem;
  height: 3rem;
  cursor: pointer;
}

label[for="select"] {
  font-size: 0.8rem;
  background-color: transparent;
  @include transform(translate(0,0));
}


// CHECKBOX
label.checkbox, label.radio, label.toggle {
  display: flex;
  flex-direction: row;
  align-items: center;
  justify-content: space-between;
  position: relative;
  top: 0;
  left: 0;
  z-index: 10;
  width: fit-content;
  height: auto;
  min-height: 1.5rem;
  margin: 0;
  padding: 0 0 0 2rem;
  cursor: pointer;
  @include transform(translate(0,0));
}

input[type="checkbox"] {
  position: absolute;
  top: 0;
  left: 0;
  width: 1.5rem;
  height: 1.5rem;
  max-height: 1.5rem;
  min-height: inherit;
  margin: 0;
  border: 1px solid $black;
  border-radius: 0;
  background-color: $white;
  cursor: pointer;
  @include appearance(none);
  @include transition(all, 0.25s, ease);
}

input[type="checkbox"]:checked:before {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  margin: 0;
  background-image: url(../assets/icons/check-line.svg);
  background-size: contain;
  content: "";
}

input[type="checkbox"]:checked:not(:disabled) {
  border-color: $black;
  background-color: $black;
}


// RADIO
label.radio {margin: 0.5rem 0 0 0;}
label.radio:first-child {margin: 0;}

input[type="radio"] {
  position: absolute;
  top: 0;
  left: 0;
  width: 1.5rem;
  max-width: 1.5rem;
  min-width: 1.5rem;
  height: 1.5rem;
  max-height: 1.5rem;
  min-height: 1.5rem;
  margin: 0;
  border: 1px solid $black;
  border-radius: 100%;
  background-color: $white;
  cursor: pointer;
  @include appearance(none);
  @include transition(all, 0.25s, ease);
}

input[type="radio"]:checked:before {
  display: block;
  position: absolute;
  top: 20%;
  left: 20%;
  margin: 0;
  width: 60%;
  height: 60%;
  border-radius: 100%;
  background-color: $black;
  content: "";
}


// TOGGLE SWITCHES
label.toggle {padding: 0 0 0 3.5rem;}

input.toggle[type="checkbox"] {
  display: flex;
  flex-direction: row;
  align-items: center;
  position: absolute;
  top: 0;
  right: 0;
  left: 0;
  width: 3rem;
  height: 1.5rem;
  max-height: 1.5rem;
  min-height: inherit;
  margin: 0;
  border: 1px solid $black;
  border-radius: 2rem;
  background-color: $white;
  cursor: pointer;
  @include appearance(none);
  @include transition(all, 0.25s, ease);
}

input.toggle[type="checkbox"]:checked:before {display: none;}

input.toggle[type="checkbox"]:after {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  width: 2.9rem;
  margin: 0;
  background-image: url(../assets/icons/close-circle-fill.svg);
  background-position-x: left;
  background-repeat: no-repeat;
  background-size: contain;
  content: "";
  @include transition(all, 0.25s, ease);
}

input.toggle[type="checkbox"]:checked:after {
  background-image: url(../assets/icons/checkbox-circle-fill.svg);
  background-position-x: right;
  background-repeat: no-repeat;
  background-size: contain;
  content: "";
}


// BUTTONS
fieldset.button-input > input[type="button"],
fieldset.button-input > input[type="submit"],
fieldset.button-input > input[type="reset"] {
  min-height: inherit;
  margin: 0;
}


// SHOW-HIDE PASSWORD
.show-hide-password {
  display: flex;
  align-items: center;
  position: absolute;
  top: 1.5rem;
  right: 0.5rem;
  width: 1.5rem;
  height: 3rem;
  cursor: pointer;
  @include transition(all, 0.25s, ease);
  svg {
    position: absolute;
    right: 0;
    fill: $primary;
    @include transition(all, 0.25s, ease);
  }
  svg.show {opacity: 1;}
  svg.hide {opacity: 0;}
}

.show-hide-password.show {
  svg.show {opacity: 0;}
  svg.hide {opacity: 1;}
}