/*
FORM ELEMENTS
  resets
  form, fieldset, legend
  input, label, placeholder
  select
  checkbox
  radio button
  error message
  password
  show-hide password
*/


// RESETS
input[type="password"],
input[type="checkbox"],
input[type="number"],
input[type="select"],
input[type="search"],
input[type="radio"],
input[type="email"],
input[type="date"],
input[type="file"],
input[type="text"],
input[type="tel"],
input[type="url"] {
  border: none;
  border-image: none;
  border-radius: 0;
  outline-color: $primary;
  font-size: 1rem;
  @include appearance(none);
  @include transition(all, 0.25s, ease);
}


// FORM, FIELDSET, LEGEND
form {
  display: flex;
  flex-direction: row;
  align-items: baseline;
  flex-wrap: wrap;
  width: 100%;
  margin: 0 auto;
  padding: 0.8rem 0;
}

fieldset {
  position: relative;
  width: 100%;
  margin: 0.8rem 0;
  padding: 0.4rem;
  border: 1px solid $dk-gray;
  border-radius: 0.25rem;
}

fieldset.checkbox {
  display: flex;
  flex-direction: row;
  align-items: center;
  margin: 0;
  border: none;
}

fieldset.radio {
  display: flex;
  flex-direction: column;
  align-items: center;
  margin: 0;
  border: none;
}

fieldset:last-child {padding: 0;}

legend {display: none;}


// INPUT, LABEL, PLACEHOLDER
input {
  width: 100%;
  min-height: 3rem;
  margin: 0;
  padding: 0.4rem;
  border: none;
  background-color: transparent;
  cursor: text;
}

label {
  position: absolute;
  top: 30%;
  width: auto;
  margin: 0;
  padding: 0 0.4rem;
  font-size: 0.9rem;
  font-weight: 600;
  @include transform(translate(0,0));
  @include transition(all, 0.25s, ease);
}

input::placeholder {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  opacity: 0;
  cursor: text;
  transition: inherit;
}

input:focus::placeholder {
  color: $dk-gray;
  opacity: 1;
}

input:placeholder-shown + label {
  @include transform(translate(0,0));
}

input:not(:placeholder-shown) + label,
input:focus + label {
  font-size: 0.8rem;
  cursor: pointer;
  @include transform(translate(0,-2.5rem));
}


// SELECT
select {
  display: inline-block;
  position: relative;
  z-index: 1;
  width: 100%;
  min-height: 3rem;
  margin: 0;
  padding: 0.4rem;
  border: none;
  outline-color: $primary;
  background-color: transparent;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  cursor: pointer;
  @include appearance(none);
  @include transition(all, 0.25s, ease);
}

select option {
  overflow: hidden;
  text-overflow: ellipsis;
  @include appearance(none);
}

.select-icon {
  display: flex;
  align-items: center;
  position: absolute;
  top: 0;
  right: 0.4rem;
  height: 100%;
  cursor: pointer;
}

select:not(:placeholder-shown) + label,
select:focus + label {
  font-size: 0.8rem;
  cursor: pointer;
  @include transform(translate(0,-2.5rem));
}


// CHECKBOX
label.checkbox {
  flex-direction: row;
  align-items: center;
  justify-content: space-between;
  position: relative;
  z-index: 10;
  margin: 0.8rem 0;
  width: fit-content;
  min-height: 1.25rem;
  padding: 0 0 0 2rem;
  cursor: pointer;
}

input[type="checkbox"] {
  position: absolute;
  top: 0;
  left: 0.125rem;
  width: 1.25rem;
  height: 1.25rem;
  max-height: 1.25rem;
  min-height: inherit;
  margin: 0;
  border: 1px solid $black;
  background-color: $white;
  cursor: pointer;
  @include appearance(none);
  @include transition(all, 0.25s, ease);
}

input[type="checkbox"]:checked:before {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  margin: 0;
  background-image: url(../assets/icons/check-line.svg);
  background-size: contain;
  content: "";
}

input[type="checkbox"]:checked:not(:disabled) {
  border-color: $secondary;
  background-color: $secondary;
}


// RADIO
label.radio {
  flex-direction: row;
  align-items: center;
  justify-content: space-between;
  position: relative;
  z-index: 10;
  margin: 0.8rem 0;
  width: fit-content;
  min-height: 1.25rem;
  padding: 0 0 0 2rem;
  cursor: pointer;
}

input[type="radio"] {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  position: absolute;
  top: 0;
  left: 0.125rem;
  width: 1.25rem;
  height: 1.25rem;
  max-height: 1.25rem;
  min-height: inherit;
  margin: 0;
  border: 1px solid $black;
  border-radius: 100%;
  background-color: $white;
  cursor: pointer;
  @include appearance(none);
  @include transition(all, 0.25s, ease);
}

input[type="radio"]:checked:before {
  display: block;
  position: relative;
  margin: 0;
  width: 60%;
  height: 60%;
  border-radius: 100%;
  background-color: $secondary;
  content: "";
}


// ERROR MESSAGE
span.error-message {
  position: absolute;
  padding: 0.4rem 0 0 0.4rem;
  font-size: 0.8rem;
  font-weight: 600;
  color: $error;
  opacity: 0;
  @include transition(all, 0.25s, ease);
}


// SHOW-HIDE PASSWORD
span.show-hide-password {
  display: flex;
  align-items: center;
  position: absolute;
  top: 0;
  right: 0.4rem;
  width: 1.125rem;
  height: 100%;
  cursor: pointer;
  @include transition(all, 0.25s, ease);
  svg {
    position: absolute;
    right: 0;
    fill: $primary;
    @include transition(all, 0.25s, ease);
  }
  svg.show {opacity: 1;}
  svg.hide {opacity: 0;}
}

span.show-hide-password.show {
  svg.show {opacity: 0;}
  svg.hide {opacity: 1;}
}