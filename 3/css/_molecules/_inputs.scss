/*
FORM ELEMENTS
  resets
  fieldset
  label
  input
  input-icon
  select
  checkbox
  radio
  switch
  button
  show-hide password
  help, invalid, valid messages
  invalid, valid, not-allowed, read-only
*/


// RESETS
input, select {
  overflow: hidden;
  font-size: $p;
  text-overflow: ellipsis;
  white-space: nowrap;
  background: transparent;
  @include appearance(none);
  @include transition(all, 0.25s, ease);
}


// FIELDSET
fieldset {
  display: inline-flex;
  flex-direction: column;
  position: relative;
  width: 100%;
  margin: 0;
  padding: $spacing-md;
  border: none;
}

fieldset.sm {width: 50%;}


// LABEL
label {
  padding: 0 0 $spacing-sm;
  @include font-body-bold;
  font-size: $small;
  line-height: 1.875;
}


// INPUT
input {
  position: relative;
  padding: $spacing-md;
  border: 1px solid black;
  border-radius: $border-radius-sm;
  line-height: 1.5;
  &.icon-post {
    padding-right: calc(2.5 * #{$spacing-lg});
  }
  &.icon-pre {
    padding-left: calc(2.5 * #{$spacing-lg});
  }
}


// INPUT ICON
.input-icon {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  position: absolute;
  top: calc(#{$spacing-xl} + #{$spacing-md});
  right: $spacing-md;
  width: calc(1.5 * #{$spacing-lg});
  height: calc(1.5 * #{$spacing-lg});
  color: $dk-gray;
  &.pre {
    right: auto;
    left: $spacing-md;
  }
}


// SELECT
select {
  position: relative;
  width: 100%;
  padding: $spacing-md;
  border: 1px solid black;
  border-radius: $border-radius-sm;
  line-height: 1.5;
}


// SELECT WRAPPER
.select-wrapper {
  position: relative;
  width: 100%;
  &:after {
    display: block;
    position: absolute;
    top: calc(#{$spacing-xl} + #{$spacing-md});;
    right: $spacing-md;
    width: calc(1.5 * #{$spacing-lg});
    height: calc(1.5 * #{$spacing-lg});
    background-image: url(../assets/images/icon-chevron.svg);
    background-size: contain;
    content: "";
  }
}


// CHECKBOX & RADIO
label.checkbox, label.radio {
  display: flex;
  flex-direction: row;
  width: fit-content;
  margin-top: $spacing-sm;
  padding: 0;
  @include font-body;
  font-size: $p;
  line-height: 1.25;
  @include transition(all, 0.25s, ease);
  input[type="checkbox"] {
    width: calc(1.25 * #{$spacing-lg});
    height: calc(1.25 * #{$spacing-lg});
    margin-right: $spacing-sm;
    border-radius: 0;
    &:before {
      display: flex;
      flex-direction: column;
      align-items: center;
      justify-content: center;
      position: absolute;
      top: 0;
      right: 0;
      bottom: 0;
      left: 0;
      margin: 0;
      opacity: 0;
      content: "";
      @include transition(all, 0.25s, ease);
    }
    &:checked:before {
      color: white;
      background-color: black;
      background-image: url(../assets/images/icon-check.svg);
      background-size: contain;
      opacity: 1;
    }
  }
  input[type="radio"] {
    width: calc(1.25 * #{$spacing-lg});
    height: calc(1.25 * #{$spacing-lg});
    margin-right: $spacing-sm;
    border-radius: 100%;
    &:before {
      display: block;
      position: absolute;
      top: calc(0.75 * #{$spacing-xs});
      left: calc(0.75 * #{$spacing-xs});
      width: $spacing-md;
      height: $spacing-md;
      margin: 0;
      border-radius: 100%;
      background-color: black;
      opacity: 0;
      content: "";
      @include transition(all, 0.25s, ease);
    }
    &:checked:before {
      opacity: 1;
    }
  }
}


// SWITCH
label.switch {
  display: flex;
  flex-direction: row;
  width: fit-content;
  margin-top: $spacing-sm;
  padding: 0;
  @include font-body;
  font-size: $p;
  line-height: 1.25;
  @include transition(all, 0.25s, ease);
  input[type="checkbox"] {
    width: calc(2.5 * #{$spacing-lg});
    height: calc(1.25 * #{$spacing-lg});
    margin-right: $spacing-sm;
    border-radius: $border-radius-lg;
    &:before {
      display: block;
      position: absolute;
      top: calc(0.5 * #{$spacing-xs});
      left: calc(0.5 * #{$spacing-xs});
      width: calc(0.875 * #{$spacing-lg});
      height: calc(0.875 * #{$spacing-lg});
      margin: 0;
      margin-left: calc(2.5 * #{$spacing-lg}) - calc(0.5 * #{$spacing-xs});
      border-radius: 100%;
      background-color: black;
      content: "";
      @include transition(all, 0.25s, ease);
    }
    &:checked:before {
      margin-left: calc(1.25 * #{$spacing-lg});
    }
  }
  &.reverse {
    flex-direction: row-reverse;
    justify-content: space-between;
    width: 100%;
    input[type="checkbox"] {
      margin-right: 0;
      margin-left: $spacing-md;
    }
  }
}


// HELP, INVALID, & VALID MESSAGE
.input-message {
  display: block;
  position: relative;
  width: 100%;
  margin: 0;
  padding: $spacing-sm 0 0;
  font-size: $small;
  line-height: 1.333333333333333;
  .help, .invalid, .valid {
    top: 0;
    left: 0;
    z-index: 0;
    width: 100%;
    padding: 0;
    opacity: 0;
    @include transition(all, 0.25s, ease);
  }
  .help {
    position: relative;
  }
  .invalid, .valid {
    position: absolute;
    padding: $spacing-sm 0 0;
    background: white;
  }
  .help.show, .invalid.show, .valid.show {
    z-index: 10;
    opacity: 1;
  }
  .invalid {
    color: $invalid;
  }
  .valid {
    color: $valid;
  }
}


// INVALID STATES
input[aria-invalid="true"],
select[aria-invalid="true"] {
  border-color: $invalid;
  color: $invalid;
}

label.checkbox.invalid,
label.radio.invalid {
  color: $invalid;
  input[type="checkbox"] {
    &:checked:before {
      background-color: $invalid;
    }
  }
  input[type="radio"] {
    &:before {
      background-color: $invalid;
    }
  }
}

label.switch.invalid {
  color: $invalid;
  input[type="checkbox"] {
    &:before {
      background-color: $invalid;
    }
  }  
}

.input-icon.invalid {
  color: $invalid;
}


// VALID STATES
input[aria-invalid="false"],
select[aria-invalid="false"] {
  border-color: $valid;
  color: $valid;
}

label.checkbox.valid,
label.radio.valid {
  color: $valid;
  input[type="checkbox"] {
    &:checked:before {
      background-color: $valid;
    }
  }
  input[type="radio"] {
    &:before {
      background-color: $valid;
    }
  }
}

label.switch.valid {
  color: $valid;
  input[type="checkbox"] {
    &:before {
      background-color: $valid;
    }
  }  
}

.input-icon.valid {
  color: $valid;
}


// NOT-ALLOWED STATES
input:disabled,
select:disabled {
  border-color: $not-allowed;
  color: $not-allowed;
  & + .input-message .help {
    color: $not-allowed;
  }
}

label.checkbox.not-allowed,
label.radio.not-allowed {
  color: $not-allowed;
  input[type="checkbox"] {
    &:checked:before {
      background-color: $not-allowed;
    }
  }
  input[type="radio"] {
    &:before {
      background-color: $not-allowed;
    }
  }
  & + .input-message .help {
    color: $not-allowed;
  }
}

label.switch.not-allowed {
  color: $not-allowed;
  input[type="checkbox"] {
    &:before {
      background-color: $not-allowed;
    }
  }  
  & + .input-message .help {
    color: $not-allowed;
  }
}

.input-icon.not-allowed {
  color: $not-allowed;
}

:disabled, .not-allowed {
  cursor: not-allowed;
}


// NOT-ALLOWED STATES
input:not(input[type="checkbox"]):not(input[type="radio"])[readonly="readonly"] {
  border-color: $read-only;
}